{"version":3,"sources":["OptionsSelect.js","MultiBarChart.js","DemoPieChart.js","TextWordCloud.js","App.js","serviceWorker.js","index.js"],"names":["OptionSelect","props","renderOption","opt","name","value","checked","selected","includes","key","className","type","title","onChange","e","clickOption","this","onClick","currentTarget","Fragment","map","options","React","Component","TiltedAxisTick","x","y","payload","stroke","parts","split","str","str2","length","transform","dy","width","textAnchor","fontSize","fill","truncate","MultiBarChart","displayData","sorted","outputData","data","state","noOpinion","row","result","valueIndex","values","hasNoOpinion","valueKey","sortBy","filter","display","Math","round","total","percented","reduce","sum","output","each","setDisplay","setState","toggleNoOpinion","calculateFill","singleAnswerList","trim","join","undefined","stackId","showPercent","renderChartOptions","height","margin","top","right","left","bottom","strokeDasharray","series","dataKey","tick","interval","verticalAlign","align","index","position","content","v","DemoPieChart","customLabel","cx","cy","midAngle","innerRadius","outerRadius","RADIAN","PI","radius","cos","sin","dominantBaseline","nameKey","label","animationDuration","animationBegin","entry","TextWordCloud","App","option","push","filterOptions","resident","district","household","children","seniors","buildFilterOptions","showPivot","filtered","pivots","Object","keys","pivot","isEqual","pickBy","_value","portion","filterRowsByPivots","val","outputArr","valueKeys","sort","cutoff","floor","slice","field","filteredData","filterMultiData","bringingOrKeeping","k","r","OptionsSelect","pieChartData","keepingCommunityCharacter","satisfiedForGroups","managingAndMaintaining","preserveAdditionalLand","interconnectedTrailSystem","participate","openSpaceRegularlyUse","playgroundsFieldRegularlyUse","prioritize","src","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eebad630.chunk.js","sourcesContent":["import React from 'react';\n\n\nimport {map} from \"lodash\"\n\n\nclass OptionSelect extends React.Component {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n\n  }\n\n  clickOption(opt, e) {\n    this.props.onClick(this.props.name, opt, e.currentTarget.checked)\n  }\n\n  renderOption = (opt) => {\n    var name = opt;\n    var value = opt;\n\n    if(typeof opt ==  \"object\") {\n      name = opt[0]\n      value = opt[1]\n    }\n    const checked = this.props.selected.includes(value)\n    return <label key={value} className={`options__label ${checked && 'options__label--checked'}`}><input type='checkbox' checked={checked} name={`${this.props.title}[${value}]`} onChange={(e) => this.clickOption(value,e) }/>{name}</label>\n  }\n\n  render() {\n    return(\n      <React.Fragment>\n      <div className='options__title'>{this.props.title}</div>\n      {map(this.props.options,this.renderOption)}\n      </React.Fragment>\n      )\n  }\n\n}\n\nexport default OptionSelect;\n","import React from 'react';\n\nimport {map, truncate, reduce, each, sortBy, filter} from \"lodash\"\n\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, ResponsiveContainer, LabelList\n} from 'recharts';\n\n\nimport { FaSignal, FaLayerGroup, FaPercent,  } from 'react-icons/fa';\n\n\n\nconst TiltedAxisTick = (props) => {\n\n    const { x, y, stroke, payload } = props;\n\n    var parts = payload.value.split(\"(\")\n\n    var str = payload.value\n    var str2 = \"\"\n\n    if(parts.length > 1) {\n      str = parts[0]\n      str2 = `(${parts[1]}`\n    }\n\n    return (\n      <g transform={`translate(${x},${y})`}>\n        <text \n          x={0} \n          y={0} \n          dy={16} \n          width={80}\n          textAnchor=\"start\" \n          fontSize=\"12\"\n          fill=\"#666\" \n          transform=\"rotate(25)\">\n            {str}\n        </text>\n         <text \n          x={-2} \n          y={10} \n          dy={16} \n          width={80}\n          fontSize=\"12\"\n          textAnchor=\"start\" \n          fill=\"#666\" \n          transform=\"rotate(25)\">\n            {truncate(str2,25)}\n        </text>\n      </g>\n    );\n\n};\n\n\nclass MultiBarChart extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      display: this.props.data.values.length > 1 ? 'percent' : 'bar',\n      noOpinion: false\n    }\n\n    this.fill = this.calculateFill();\n    //this.fill = [\"#d6d6a9\", \"#b0bc7f\", \"#85a35a\", \"#558b39\",\"#0e731b\"\n    //[\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"]\n  }\n\n  calculateFill() {\n    if(this.props.data.values.length < 5) {\n      return ['#66c2a4','#2ca25f','#006d2c','#CCCCCC']\n    } else {\n      return ['#ccece6','#99d8c9','#66c2a4','#2ca25f','#006d2c',\"#CCCCCC\"]\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  showExtra() {\n    if(this.props.data.values.length == 1) {\n      const singleAnswerList = map(filter(this.props.data.data, (row) => row[true] == 1 ),(row) =>row.name.trim())\n\n      if(singleAnswerList.length > 0) {\n        return <div className='chart__single-answers'>\n          Answers with 1 response: {singleAnswerList.join(\", \")}\n        </div>\n      }\n    }\n  }\n\n  displayData = () => {\n    var outputData = this.props.data.data;\n\n    if(!this.state.noOpinion) {\n      outputData = map(outputData, (row) => {\n        var result = { ...row }\n        delete result['No Opinion']\n\n        return result;\n      })\n    }\n\n    var sorted;\n    var valueIndex = this.props.data.values.length - (this.hasNoOpinion() ?  2 : 1);\n    var valueKey = this.props.data.values[valueIndex]\n    if(this.props.data.values.length == 1) {\n      sorted =  sortBy(outputData, (row) => -row[true] )\n    } else {\n      sorted =  sortBy(outputData, (row) => -row[valueKey] )\n    }\n\n\n    if(this.props.data.values.length == 1) {\n      sorted = filter(sorted, (row) => row[true] > 1)\n      \n      if(this.state.display == \"percent\") {\n        return map(sorted, (row) => {\n          return { name: row.name, [true]: Math.round((row[true]||0) * 1000 / this.props.data.total) / 10 }\n        })  \n      } else {\n        return sorted;\n      }\n    } else if(this.state.display == \"percent\") {\n      var percented = map(sorted, (row) => {\n        const total = reduce(this.props.data.values, (sum, value) => {\n          return sum + (row[value] || 0) \n        }, 0)\n\n        var output = { name: row.name }\n        each(this.props.data.values, (value) => {\n          if(row[value]>0) { \n            output[value] = Math.round((row[value]||0) * 1000 / total) / 10\n          }\n        });\n        return output;\n      })\n      return sortBy(percented, (row) => -row[valueKey] )\n\n    } else {\n      return sorted\n    }\n  }\n\n  setDisplay = (display) => {\n    this.setState({\n      display: display\n    })\n  }\n\n  toggleNoOpinion = () => {\n    this.setState({\n      noOpinion: !this.state.noOpinion\n    })\n  }\n\n  hasNoOpinion() {\n    return this.props.data.values.includes(\"No Opinion\")\n  }\n\n  renderChartOptions() {\n    const { display } = this.state;\n      return <div className='chart__options'>\n        <button className={display == 'bar' ? 'chart__option--selected' : undefined} title=\"Bar chart of participant responses\" onClick={() => this.setDisplay('bar')}><FaSignal/></button>\n        { (this.props.data.values.length > 1) &&  <button title=\"Stacked view of each response grouped by option\" className={display == 'stack' ? 'chart__option--selected' : undefined} onClick={() => this.setDisplay('stack')}><FaLayerGroup/></button> }\n        <button title=\"Percent of respondents to the question who selected a specific option\" onClick={() => this.setDisplay('percent')} className={display == 'percent' ? 'chart__option--selected' : undefined }><FaPercent/></button>\n        { this.hasNoOpinion() && <button className={this.state.noOpinion ? 'chart__option--selected' : undefined} onClick={this.toggleNoOpinion}>No Opinion</button> }\n      </div>\n  }\n\n  render() {\n    const stackId = this.state.display == 'bar' ? null : 'stack' \n    const showPercent = this.state.display == 'percent'\n    return(\n      <div className='chart'>\n        {this.props.title && <div className='chart__title'>{this.props.title} ({this.props.data.total} Responses)</div>}\n        {this.renderChartOptions()}\n        <div className='chart__wrapper'>\n        <div className='chart__chart'>\n        <ResponsiveContainer width=\"99%\" height={600}>\n         <BarChart\n          data={this.displayData()}\n          margin={{\n            top: 5, right: 120, left: 20, bottom: 120,\n          } }\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          {this.props.data.series.length > 1 && <XAxis dataKey=\"name\" width={50} tick={<TiltedAxisTick display={this.state.display}/>}  interval={0} />}\n          <YAxis />\n          <Tooltip />\n          {this.props.data.values.length > 1 && <Legend verticalAlign=\"top\" align=\"right\" height={36} />}\n          {map(this.props.data.values, (value,index) =>  (this.state.noOpinion || value != \"No Opinion\") ? <Bar stackId={stackId} dataKey={value} key={value} fill={this.fill[index]} ><LabelList dataKey={value} fontSize={this.props.data.series.length > 11 ? \"11\" : \"13\"} position=\"center\" content={(v) => v.value ? (showPercent ? `${v.value}%` : v.value) : '' } /> </Bar> : null)}\n        </BarChart>\n        </ResponsiveContainer>\n        </div>\n        { /* this.showExtra() */  }\n        </div>\n      </div>\n      )\n  }\n}\n\nexport default MultiBarChart;\n","import React from 'react';\n\nimport {map, truncate, reduce, each, sortBy, filter, compact} from \"lodash\"\n\nimport {\n  PieChart, Pie, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label, ResponsiveContainer, LabelList\n} from 'recharts';\n\n\nclass DemoPieChart  extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.fill = ['#a1d99b','#74c476','#41ab5d','#238b45','#006d2c','#00441b']\n  }\n\n  customLabel = ({\n          cx,\n          cy,\n          midAngle,\n          innerRadius,\n          outerRadius,\n          value,\n          index\n        }) => {\n          const RADIAN = Math.PI / 180;\n          // eslint-disable-next-line\n          const radius = 25 + innerRadius + (outerRadius - innerRadius);\n          // eslint-disable-next-line\n          const x = cx + radius * Math.cos(-midAngle * RADIAN);\n          // eslint-disable-next-line\n          const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n          return (\n            <text\n              x={x}\n              y={y}\n              fill={this.fill[index]}\n              textAnchor={x > cx ? \"start\" : \"end\"}\n              dominantBaseline=\"central\"\n            >\n              {this.props.data[index].name} ({value})\n            </text>\n          );\n        }\n\n  render() {\n     return(\n      <div className='demographics__chart'>\n        {this.props.title && <div className='demographics__title'>{this.props.title}</div>}\n        <div className='demographics__wrapper'>\n        <div className='demographics__chart'>\n        <ResponsiveContainer width=\"100%\" height={400}>\n         <PieChart title={this.props.title} >\n          <Pie data={this.props.data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={100} label={this.customLabel}\n          animationDuration={400}  animationBegin={0}  >\n           {map(this.props.data,(entry, index) => <Cell key={`cell-${index}`} fill={this.fill[index]}/>)}\n          </Pie>\n\n        </PieChart>\n        </ResponsiveContainer>\n        </div>\n        </div>\n      </div>\n      )\n  }\n\n}\n\nexport default DemoPieChart;\n\n\n","import React from 'react';\nimport ReactWordcloud from 'react-wordcloud';\n\nimport wf from 'word-freq'\nimport sw from 'stopword'\n\nimport { reduce, map } from \"lodash\"\n\nconst options = {\n  colors: ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b'],\n  enableTooltip: true,\n  deterministic: false,\n  fontFamily: 'impact',\n  fontSizes: [5, 60],\n  fontStyle: 'normal',\n  fontWeight: 'normal',\n  padding: 1,\n  rotations: 3,\n  rotationAngles: [0, 90],\n  scale: 'sqrt',\n  spiral: 'archimedean',\n  transitionDuration: 1000,\n};\n\nfunction wordDisplay(word,index) {\n  return <div key={index} className=\"chart__word\">{word}</div>\n}\n\nfunction TextWordCloud(props) {\n  return (\n    <div>\n      <div className='chart__title'>{props.title}</div>\n      <div className=\"chart__words\">\n        {map(props.words, wordDisplay)}\n      </div>\n    </div>\n  );\n}\n\nexport default TextWordCloud;","import React from 'react';\nimport './App.css';\n\n\nimport OptionsSelect from \"./OptionsSelect.js\"\nimport MultiBarChart from \"./MultiBarChart.js\"\nimport DemoPieChart from \"./DemoPieChart.js\"\nimport TextWordCloud from \"./TextWordCloud.js\"\n\nimport { filter, each, pickBy, isEqual, map, sort, compact, sortBy } from \"lodash\"\n\nimport bringingOrKeeping  from './data/bringing_or_keeping.json';\nimport keepingCommunityCharacter from \"./data/keeping_community_character.json\"\nimport satisfiedForGroups from \"./data/satisfied_for_groups\"\nimport managingAndMaintaining from \"./data/managing_and_maintaining\"\nimport preserveAdditionalLand from \"./data/preserve_additional_land\"\nimport interconnectedTrailSystem from \"./data/interconnected_trail_system\"\nimport participate from \"./data/participate\"\nimport openSpaceRegularlyUse from  \"./data/open_space_regularly_use\"\nimport playgroundsFieldRegularlyUse from \"./data/playgrounds_fields_regularly_use\"\nimport prioritize from \"./data/prioritize\"\n\n/*\nimport improvements from \"./data/improvements\" \nimport important5Years from \"./data/important_5_years\"\n*/\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      resident: [\"Yes\"],\n      district: [\"All\"],\n      household: [\"All\"],\n      children: [\"All\"],\n      seniors: [\"All\"]\n    }\n\n    this.filterOptions = this.buildFilterOptions()\n  }\n\n  buildFilterOptions() {\n    return {\n      resident: ['All','Yes','No'],\n      district: ['All','District 1','District 2','District 3','District 4','District 5','District 6'],\n      household:['All', \"1\",'2','3','4',['5+','5']],\n      children: ['All','0','1','2','3','4',['5+','5']],\n      seniors:  ['All','0','1','2',['3+','3']]\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  clickOption = (name, option, checked) => {\n    var value = [...this.state[name]]\n\n    if(checked) {\n      if(option === \"All\") {\n        value = [\"All\"]\n      } else {\n        value = filter(value,(v) => v !== \"All\")\n        value.push(option)\n      }\n    } else {\n      if(option === \"All\") {\n        value = filter(this.filterOptions[name], (v) => v !== \"All\")\n      } else {\n        value = filter(value,(v) => v !== option)\n        if(value.length === 0) { value = ['All']}\n      }\n    }\n\n    this.setState({ [name]: value })\n  }\n\n\n  filterRowsByPivots(data,showPivot) {\n    var filtered = data;\n\n    const pivots = Object.keys(this.filterOptions)\n\n    each(pivots, (pivot) => {\n      if(!isEqual(this.state[pivot],['All'])) {\n        filtered = filter(filtered, (row) => this.state[pivot].includes(\"\" + row[pivot]))\n      }\n    })\n    return map(filtered, (row) => { return pickBy(row, (_value, key) => (!showPivot && !pivots.includes(key)) || (showPivot && showPivot == key))})\n  }\n\n  filterMultiData(data,portion=\"all\",showPivot=false) {\n    const filtered = this.filterRowsByPivots(data,showPivot);\n\n    var series = Object.keys(filtered[0] || {})\n    var values = {}\n\n    var output = {}\n    each(series,(name) => {\n      output[name] = {}\n    })\n    \n    each(filtered, (row) => {\n      each(series, (name) => {\n        var val = row[name]\n        if(val == \"0 (No Opinion)\") {\n          val = \"No Opinion\"\n        }\n        if(val !== null && val !== false && val !== \"null\") {\n          values[val] = true;\n          output[name][val] = (output[name][val] || 0) + 1\n        }\n      })\n    })\n\n    var outputArr =  map(series, (name) => {\n      return { name: name, ...output[name]}\n    })\n\n    var valueKeys = Object.keys(values)\n    valueKeys.sort()\n\n    if(portion != 'all') {\n      const cutoff = Math.floor(series.length/2)\n      if(portion == \"first\") {\n        series = series.slice(0, cutoff)\n        outputArr = outputArr.slice(0, cutoff)\n      } else {\n        series = series.slice(cutoff)\n        outputArr = outputArr.slice(cutoff)\n      }\n    }\n\n    return {\n      data: outputArr,\n      series: series,\n      values: valueKeys,\n      total: filtered.length\n    }\n  }\n\n  filterWordCloudData(data) {\n    const filtered = this.filterRowsByPivots(data);\n    return map(filtered,(row) => row['question']);\n  }\n\n  pieChartData(field) {\n    const filteredData = this.filterMultiData(bringingOrKeeping,\"all\",field)\n    const outputData = filter(map(filteredData.data[0], \n                                  (v,k) => { return k != 'name' ? { name: k, value: v } : null }),\n                              (r) => r !== null)\n    return sortBy(outputData, (row) => row.name )\n  }\n\n  renderFilter() {\n    return <div className='options'>\n        <OptionsSelect name='resident' title=\"Amesbury Resident\" options={this.filterOptions.resident} selected={this.state.resident} onClick={this.clickOption} />\n        <OptionsSelect name='district' title=\"District\"  options={this.filterOptions.district} selected={this.state.district} onClick={this.clickOption} />\n        <OptionsSelect name='household' title=\"Size of household\" options={this.filterOptions.household} selected={this.state.household} onClick={this.clickOption} />\n        <OptionsSelect name='children' title=\"Children in household\" options={this.filterOptions.children} selected={this.state.children} onClick={this.clickOption} />\n        <OptionsSelect name='seniors' title=\"Seniors in household\" options={this.filterOptions.seniors} selected={this.state.seniors} onClick={this.clickOption} />\n      </div>\n  }\n\n  render() {\n    return <div className='content'>\n      <div className='demographics'>\n        <DemoPieChart  data={this.pieChartData('district')} title=\"District\" />\n        <DemoPieChart  data={this.pieChartData('household')} title=\"Household Size\" />\n        <DemoPieChart  data={this.pieChartData('children')} title=\"Children in Household\" />\n        <DemoPieChart  data={this.pieChartData('seniors')} title=\"Seniors in Household\" />\n      </div>\n      <div className='charts'>`\n        <MultiBarChart  data={this.filterMultiData(bringingOrKeeping)} title=\"How important were the following Open Space and Recreational Resources in bringing you to or keeping you in Amesbury?\" />\n        <MultiBarChart  data={this.filterMultiData(keepingCommunityCharacter)} title=\"How important do you rate the following to maintaining Amesbury's community character?\" />\n        <MultiBarChart  data={this.filterMultiData(satisfiedForGroups)} title=\"How satisfied are you with Amesbury's recreational options for the following groups?\"/>\n        <MultiBarChart  data={this.filterMultiData(managingAndMaintaining,\"first\")} title=\"How is Amesbury doing in managing and maintaining its Open Space and Recreation Resources?\" />\n        <MultiBarChart  data={this.filterMultiData(managingAndMaintaining,\"second\")}  />\n\n\n        <MultiBarChart  data={this.filterMultiData(preserveAdditionalLand)} title=\"How important is it for Amesbury to preserve additional land for:\" />\n\n\n        <MultiBarChart  data={this.filterMultiData(interconnectedTrailSystem)} title=\"Would you like to see the City have an inter-connected trail system (bike paths, sidewalks, and biking/walking trails)?\" />\n\n        <MultiBarChart  data={this.filterMultiData(participate)} title=\"Please identify the recreational activities in which you and your household currently participate or would like to participate. Check all that apply (and ignore the rest).\" />\n\n        <MultiBarChart  data={this.filterMultiData(openSpaceRegularlyUse)} title=\"Which places in Amesbury do members of your household regularly use for things like walking, hiking, biking and boating? (Check all that apply, ignore the rest)\" />\n\n        <MultiBarChart  data={this.filterMultiData(playgroundsFieldRegularlyUse)} title=\"What playgrounds or athletic facilities in Amesbury do members of your household regularly use? (Check all that apply)\" />\n\n        <MultiBarChart  data={this.filterMultiData(prioritize)} title='Where should Amesbury prioritize its resources (planning, maintenance, improvement, expansion)? (Please choose your top 4)'/>\n        \n        <div className='chart'>\n          <div className='chart__title'>\n            What improvement(s) do you suggest for ANY open space, park or recreational facilities in Amesbury?\n          </div>\n          <div className='chart__image'>\n            <img src='improvements.png'/>\n          </div>\n        </div>\n\n\n        <div className='chart'>\n          <div className='chart__title'>\n            What are the most important open space or recreation actions the City should take in the next 5 years? For example, should the City acquire a specific piece of property? Save a particular existing resource? Initiate a particular program? Develop a site? Concentrate on maintenance?, etc.\n          </div>\n          <div className='chart__image'>\n            <img src='important_5_years.png'/>\n          </div>\n        </div>\n\n      </div>\n    </div>\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}